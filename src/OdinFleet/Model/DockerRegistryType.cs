/*
 * ODIN Fleet API
 *
 * API to access Odin Fleet, empowering developers to deploy gameservers all around the world in just a few lines of code.
 *
 * The version of the OpenAPI document: 0.8.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = OdinFleet.Client.FileParameter;
using OpenAPIDateConverter = OdinFleet.Client.OpenAPIDateConverter;

namespace OdinFleet.Model
{
    /// <summary>
    /// Defines DockerRegistryType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DockerRegistryType
    {
        /// <summary>
        /// Enum Dockerhub for value: dockerhub
        /// </summary>
        [EnumMember(Value = "dockerhub")]
        Dockerhub = 1,

        /// <summary>
        /// Enum Github for value: github
        /// </summary>
        [EnumMember(Value = "github")]
        Github = 2,

        /// <summary>
        /// Enum Gitlab for value: gitlab
        /// </summary>
        [EnumMember(Value = "gitlab")]
        Gitlab = 3,

        /// <summary>
        /// Enum Awsecr for value: awsecr
        /// </summary>
        [EnumMember(Value = "awsecr")]
        Awsecr = 4,

        /// <summary>
        /// Enum Azure for value: azure
        /// </summary>
        [EnumMember(Value = "azure")]
        Azure = 5,

        /// <summary>
        /// Enum Custom for value: custom
        /// </summary>
        [EnumMember(Value = "custom")]
        Custom = 6,

        /// <summary>
        /// Enum Default for value: default
        /// </summary>
        [EnumMember(Value = "default")]
        Default = 7,

        /// <summary>
        /// Enum Proget for value: proget
        /// </summary>
        [EnumMember(Value = "proget")]
        Proget = 8,

        /// <summary>
        /// Enum Quay for value: quay
        /// </summary>
        [EnumMember(Value = "quay")]
        Quay = 9
    }

}
